[{"title":"Hello World","date":"2021-03-24T07:02:20.000Z","path":"2021/03/24/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Java学习记录","date":"2021-03-24T06:45:00.000Z","path":"2021/03/24/Java学习记录/","text":"算法设计与分析实验一第一题题目12345678910给定一个正整数，编写程序计算有多少对质数的和等于输入的这个正整数，并输出结果。输入值小于1000。如，输入为10, 程序应该输出结果为2。（共有两对质数的和为10，分别为(5, 5) , (3, 7)）。输入输入一个整数n( 3≤n&lt;1000)。输出输出对数。样例输入10样例输出2 举例说明123410 【3,7】、【5,5】 212 【1,11】、【5,7】 215 【2,13】 120 【1,19】、【3,17】、【7,13】 3 分析12341、写一个方法来判断一个数是不是素数2、从头开始遍历，判断每一个数是否满足条件 完整代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051package study01;import java.util.Scanner;public class demo01 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); int num = sc.nextInt(); //键盘获取输入的num值 int count = 0; //定义一个count，用来记录最后有几个质数对 int a = 1;//定义两个数，它们的和为num int b = num - a; //循环从1开始到中间那个数，排除了 例如num=10，有【3,7】，【7,3】这样的重复 while( a!= (num/2 + 1) ) &#123; if (sushu ( a ) &amp;&amp; sushu ( b )) &#123; count ++; //如果a,b都是素数，则计数器加一 System.out.println(&quot;[&quot;+a+&quot;,&quot;+b+&quot;] &quot;); &#125; a++; //循环一次后a++,b--，进行下次循环,满足条件后跳出循环 b--; //System.out.println(a+&quot; &quot;+b); &#125; System.out.println(count); //输出结果 &#125; //素数：除了1和它本身外不能被其他数整除的数叫做素数。 //判断的方法是从2到num-1，遍历看能不能被整除，如果能被其中的一个整除，则不是素数，如果都不可以整除，那么就不是素数。 //用来判断一个数是否为素数，如果是素数则返回true，如果不是素数则返回false public static boolean sushu(int num) &#123; if (num == 2 ||num == 1) &#123; //如果num刚好为2，则判定直接为素数 return true; &#125; else &#123; for (int i = 2; i &lt; num; i++) &#123; if (num % i == 0) &#123; return false; &#125;else&#123; //这里特别注意一定要讲循环走完一圈才可以出去，否则判断一次后循环就会结束。 if(i==num-1)&#123; return true; //判定i==num-1时才是循环了一圈，所以结束循环 &#125;else continue; //否则跳过此次循环进行下一次循环 &#125; &#125; return false; &#125; &#125;&#125; 总结以及心得1231、循环判断数的时候，为了避免【7，3】、【3,7】这种相同的情况，因此只需要判断到一半的位置即可。2、判断一个数是否为素数的时候，只遍历除了1和这个数本身之外的其他数，能否被自己整除即可。如果可以被整除，那么就不是素数。如果不可以被整除，那么就是素数。注意2是一个特殊情况，需要单独考虑。 第二题题目1234567891011121314151617181920小明想给老师当助教从而得一些补助。老师会给小明一些作业让他去批改，并按批改的作业份数和批改正确率来确定小明的补助费。老师是这么规定的，批改一份作业小明会得到m元，如果该份作业批改完全正确那么会从中扣除k元复查费；如果批改中出现了错误会从中扣除x元当惩罚费用，此时这份作业不再扣除复查费。但是老师觉得小明勤工助学不容易，不想扣过多的费用，于是规定如果有一份作业批改错误扣了x元，那么可以抵消一份批改正确作业的复查费。举例，如果有两份作业，一份批改正确一份批改错误，那么错误的那份小明可以得到m-x元，正确的那份小明可以得到m元，不用扣复查费。最后，你能算出小明一共能得多少补助么?输入第一行四个整数n、m、x、k，n表示小明批改作业的总份数，m、x、k的含义如题面描述，1≤n≤100000，1≤m, x, k≤100，x, k≤m;第二行n个整数，每个整数只有两种可能，0表示该份作业批改错误，1表示该份作业批改正确。输出输出一个整数，表示小明最后一共得到的补助费。样例输入总份数n 批改正确得到的钱 m 惩罚费用x 复查费k4 5 2 11 1 1 0（三正确 一错误） 1 1 1 1 0 0 10-2+20-4样例输出16 24 举例说明121 1 1 1 0 0 24 分析12341、通过Scanner函数来进行数字的输入2、知道题目结果如何计算3、考虑错误题目大于正确题目的特殊情况 完整代码1234567891011121314151617181920212223242526272829303132333435363738394041424344package study02;import java.util.Scanner;public class demo01 &#123; public static void main(String[] args) &#123; int n, m, x, k; int r = 0;//改正确的题目 int f = 0;//改错误的题目 //总份数n 批改正确得到的钱 m 惩罚费用x 复查费k System.out.print(&quot;请依次输入 总份数n 批改正确得到的钱 m 惩罚费用x 复查费k：&quot;); Scanner sc = new Scanner(System.in);//键盘输入n,m,x,k n = sc.nextInt(); m = sc.nextInt(); x = sc.nextInt(); k = sc.nextInt(); System.out.print(&quot;请输入作业更改情况（正确为1，错误为0,最多输入&quot;+n+&quot;个数）：&quot;); int array[] = new int[n];//定义一个数组，用来记录题目的错误，并统计正确与错误赋值给r,f for(int i = 0; i &lt; n; i++)&#123; array[i] = sc.nextInt(); //System.out.print(array[i]+&quot;\\t&quot;);//输出数组 if(array[i]==1)&#123; r++; &#125;else if(array[i]==0)&#123; f++; &#125;else&#123; System.out.println(&quot;输入错误！&quot;); break; &#125; &#125; //System.out.println(&quot;r=&quot;+r); //System.out.println(&quot;f=&quot;+f); int sum = 0;//总价格 if(r&gt;=f)&#123; //正确题数大于错误题数 sum = n*m - f*x - (r-f)*k; &#125;else&#123; //错误题数大于正确题数，此时（r-f)为负，不能用上面的计算方式，此时不需要考虑复查情况。 sum=n*m - f*x; &#125; System.out.println(&quot;小明得到的钱为&quot; + sum);//输出结果 &#125;&#125; 总结以及心得12341、此题并不难，只需要知道题目的计算方式即可2、通过这题要学会Scanner函数的使用方法，该函数可以通过多次获取做到多次输入给多个数据赋值 注意：如果定义的只有n个数据，那么输入超过n个数的时候，只会获取前n个数据并进行赋值。","categories":[{"name":"Java","slug":"Java","permalink":"http://example.com/categories/Java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://example.com/tags/java/"},{"name":"基础学习","slug":"基础学习","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"}]}]